<div class="modal-dialog" role="document">
  <div class="modal-content">
    <div class="modal-header">
      <h5 class="modal-title" id="drop-modal">Drop</h5>
      <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
      </button>
    </div>
    <div class="modal-body">
       <% if @drop_duty_list && @drop_duty_list.size>1 %>
        <p>
          <%= check_box_tag "duty_all",'all',false,id:'allCheckBox' %>
          <%= label_tag "duty_all", 'Select   All' %>
        </p>
      <% end %>
      <%= form_tag(drop_duties_path, method: :post) do %>
        <% format_duties(@drop_duty_list).each do |d| %>
          <p>
            <%= check_box_tag "duty_id[#{d[:id]}]", d[:id],false,class:'timeCheckBox' %>
            <%= label_tag "duty_id[#{d[:id]}]", d[:timing] %>
          </p>
        <% end %>
        <p>
          Drop to <%= select_tag "user_id", options_from_collection_for_select(@users, "id", "username"), prompt: "all" %>
        </p>
        <p>
          <%= submit_tag "Drop/Swap", class: "btn btn-primary", onclick: :"return validateModal();" %>
        </p>
      <% end %>
      <div class="drop-notes">
        <p><u>Notes</u></p>
        <p>You can only drop duties at most 2 hours before it starts</p>
        <p>If you specify a person to swap with, the duties can only be grabbed by that person</p>
        <p>After dropping/swapping, you can cancel by re-grabbing the duties</p>
      </div>
    </div>
  </div>
</div>

<script>
  $(document).ready(function(){
      // Set the initial check status when ready
      setSelectAllCheckBoxStatus();

      // Click event on time checkbox
      $('.timeCheckBox').click(function(){
          setSelectAllCheckBoxStatus();
      });

      // Click event on select all checkbox
      $('#allCheckBox').click(function(){
          $('.timeCheckBox').prop('checked',$(this).prop('checked'));
      });

      // check whether all checkbox is selected, return boolean
      function isSelectAll(){
          return $('input[type=checkbox].timeCheckBox').length==$('input[type=checkbox]:checked.timeCheckBox').length;
      }

      // Set select all checkbox status
      function setSelectAllCheckBoxStatus(){
          $('#allCheckBox').prop('checked',isSelectAll());
      }
  })
</script>